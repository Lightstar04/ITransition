<h1 class="row justify-content-center">Book generator</h1>
<div class="controls">
    <div class="col m-3">
        <label class="col m-4">Language/Region
            <select id="lang">
                <option value="en">English</option>
                <option value="de">German</option>
                <option value="fr">French</option>
            </select>
        </label>
        <label class="col m-4">
            Seed
            <input type="number" id="seed" value="42" min="0"/>
            <button onclick="randomizeSeed()">🔀</button>
        </label>
        <label class="col m-4">
            Likes
            <input type="range" id="avgLikes" min="0" step="0.1" max="10" />
            <span id="likesVal">3.5</span>
        </label>
        <label class="col m-4">
            Review
            <input type="range" id="avgReviews" step="0.1" min="0" max="20" value="2.0" />
            <span id="reviewsVal">1.0</span>
        </label>
    </div>
</div>

<table id="bookTable" class="table table-bordered table-hover">
    <thead>
        <tr>
            <th>#</th>
            <th>ISBN</th>
            <th>Title</th>
            <th>Author(s)</th>
            <th>Publisher</th>
        </tr>
    </thead>
    <tbody></tbody>
</table>

<script>
    const tableBody = document.querySelector("#bookTable tbody");
    const seedInput = document.getElementById("seed");
    const langInput = document.getElementById("lang");
    const likeInput = document.getElementById("avgLikes");
    const reviewInput = document.getElementById("avgReviews");
    const likesVal = document.getElementById("likesVal");
    const reviewsVal = document.getElementById("reviewsVal")

    let page = 1;
    let loading = false;
    let lastConfig = {};
    let index = 1;

    function randomizeSeed(){
        seedInput.value = Math.floor(Math.random() * 100000);
        resetTable();
    }

    function resetTable(){
        tableBody.innerHTML = "";
        page = 1;
        index = 1;
        loadBooks();
    }

    function loadBooks(){
        loading = true;

        const config = {
            seed: parseInt(seedInput.value),
            language: langInput.value,
            avgLikes: parseFloat(likeInput.value),
            avgReviews: parseFloat(reviewInput.value)
        };

        if(JSON.stringify(config) !== JSON.stringify(lastConfig)){
            lastConfig = config;
            resetTable();
            loading = false;;
            return;
        }

        fetch(`/api/book?seed=${config.seed}&page=${page}&language=${config.language}&avgLikes=${config.avgLikes}&avgReviews=${config.avgReviews}`)
            .then(res => res.json())
            .then(data => {
                data.forEach(book => {
                    const row = document.createElement("tr");
                    row.innerHTML = `
                        <td>${index++}</td>
                        <td>${book.isbn}</td>
                        <td>${book.title}</td>
                        <td>${book.author}</td>
                        <td>${book.publisher}</td>
                        `;
                    row.addEventListener("click", () => {
                      if (row.nextElementSibling?.classList.contains("expanded")) {
                        row.nextElementSibling.remove();
                      }
                      else {
                        const detail = document.createElement("tr");
                        detail.classList.add("expanded");
                        detail.innerHTML = `<td colspan="5">
                          <b>Likes:</b> ${book.likes}<br>
                          <b>Reviews:</b><br>
                          <ul>${book.reviews.map(r => `<li><b>${r.author}</b>: ${r.text}</li>`).join("")}</ul>
                        </td>`;
                        row.after(detail);
                      }
                    });
                    tableBody.appendChild(row);
                });
                page++;
                loading = false;
            });
    }

    likeInput.addEventListener("input", () => {
      likesVal.textContent = likeInput.value;
      resetTable();
    });
    reviewInput.addEventListener("input", () => {
        reviewsVal.textContent = reviewInput.value;
        resetTable();
    });

    seedInput.addEventListener("change", resetTable);
    langInput.addEventListener("change", resetTable);
    reviewInput.addEventListener("change", resetTable);

    window.addEventListener("scroll", () => {
      if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight - 100) {
        loadBooks();
      }
    });

    loadBooks();
</script>